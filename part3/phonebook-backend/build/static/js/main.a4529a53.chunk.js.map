{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newPerson","post","id","delete","status","newNum","console","log","url","put","SearchFilter","props","value","onChange","handle","PersonForm","onSubmit","handleSubmit","name","handleNameChange","number","handleNumberChange","onClick","Person","handleDelete","DisplayPersons","mappedFilteredPersons","persons","filter","person","toLowerCase","includes","filterText","map","Notification","message","className","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","newNotification","setNewNotification","useEffect","backendService","initialPersons","testButton","event","target","preventDefault","oldP","find","match","undefined","window","confirm","newP","upd","setTimeout","returnedPerson","concat","targetID","targetPerson","p","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4529a53.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst GetAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst Create = newPerson => {\n    const request = axios.post(baseUrl, newPerson)\n    return request.then(response => response.data)\n}\n\nconst DeleteP = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.status)\n}\n\nconst ChangeNumber = newNum => {\n    console.log('newNumber:', newNum)\n    const url = `http://localhost:3001/api/persons/${newNum.id}`\n    console.log('url:', url)\n    const request = axios.put(url, newNum)\n    return request.then(response => response.data)\n}\nexport default {\n    getAll: GetAll,\n    create: Create,\n    deleteP: DeleteP,\n    changeN: ChangeNumber\n}","import React, { useState, useEffect } from 'react'\nimport backendService from './services/persons'\n\nconst SearchFilter = (props) => {\n  return (\n    <div>\n      <form>\n        filter shown with <input value={props.value} onChange={props.handle} />\n      </form>\n    </div>\n  )\n}\n\nconst PersonForm = (props) => {\n  return (\n    <div>\n      <form onSubmit={props.handleSubmit}>\n        <div>\n          name: <input value={props.name} onChange={props.handleNameChange} />\n        </div>\n        <div>\n          number: <input value={props.number} onChange={props.handleNumberChange} />\n        </div>\n        <div>\n          <button onClick={props.handleSubmit}>add</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nconst Person = (props) => {\n  return (\n    <div><p>{props.name} : {props.number} <button id={props.id} onClick={props.handleDelete}>delete</button></p></div>\n  )\n}\nconst DisplayPersons = (props) => {\n  const filteredPersons = props.persons.filter(person => person.name.toLowerCase().includes(props.filterText.toLowerCase()))\n  const mappedFilteredPersons = filteredPersons.map(person => <Person name={person.name} number={person.number} key={person.name} id={person.id} handleDelete={props.handle}/>)\n  return (\n    <div>\n      {mappedFilteredPersons}\n    </div>\n  )\n}\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n  return (\n    <div className='error'>\n      {message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [newNotification, setNewNotification] = useState(null)\n\n  useEffect(() => { backendService.getAll().then(initialPersons => { setPersons(initialPersons) }) },\n    [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const oldP = persons.find(match => match.name.toLowerCase() === newName.toLowerCase())\n    if (oldP !== undefined) {\n      console.log('old entry:', oldP)\n      if (window.confirm(`${newName} is already in the phonebook, update the number?`)) {\n        const newP = { ...oldP, number: newNumber }\n        backendService.changeN(newP).then(response => backendService.getAll().then(upd => setPersons(upd)))\n        setNewNotification(`Number of '${newP.name}' changed to ${newP.number}`)\n        setTimeout(() => {\n          setNewNotification(null)\n        }, 5000)\n      }\n    }\n    else {\n      const personObject = {\n        name: newName,\n        number: newNumber\n      }\n      backendService.create(personObject).then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n        setNewNotification(`Added ${returnedPerson.name}`)\n        setTimeout(() => {\n          setNewNotification(null)\n        }, 5000)\n      })\n    }\n  }\n\n\n  const handleNameChange = (event) => {\n    //console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    //console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    //console.log(event.target.value)\n    setNewFilter(event.target.value)\n  }\n\n  const handleDeleteChange = (event) => {\n    const targetID = event.target.id\n    console.log('targetID:', targetID)\n    console.log('persons', persons)\n    const targetPerson = persons.find(p => p.id === targetID)\n    console.log('targetPerson', targetPerson)\n    if (window.confirm(`Delete ${targetPerson.name} from the phonebook?`)) {\n      backendService.deleteP(targetID).then(response => {\n        console.log('response:', response)\n        if (response === 204) {\n          backendService.getAll().then(response => setPersons(response))\n        }\n      }).catch(error => {\n        backendService.getAll().then(response => setPersons(response))\n        setNewNotification(`${targetPerson.name} has already been removed from the phonebook`)\n      })\n      setTimeout(() => {\n        setNewNotification(null)\n      }, 5000)\n    }\n    //console.log('handleDeleteChange')\n  }\n\n  const handleTestClick = (event) => {\n    console.log(event.target.id)\n  }\n\n  const testButton = (\n    <div>\n      <button onClick={handleTestClick} id='2'>test</button>\n    </div>\n  )\n  \n  return (\n    <div>\n      <h1>Phonebook</h1>\n      {testButton}\n      <Notification message={newNotification} />\n      <SearchFilter value={newFilter} handle={handleFilterChange} />\n      <h2>add a new person</h2>\n      <PersonForm handleSubmit={addPerson} name={newName} number={newNumber} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n      <DisplayPersons persons={persons} filterText={newFilter} handle={handleDeleteChange} />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}